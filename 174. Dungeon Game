************************************my runtime error soln************************************************
class Solution {
public:
    int check(int x,int y,vector<vector<int>>& v,vector<vector<int>>& dp){
        if(x==0 && y==0) return min(0,v[0][0]);
        if(x<0 || y<0) return -1e9;
        if(dp[x][y]!=1e9) return dp[x][y];
        int up=v[x][y] + check(x-1,y ,v,dp); 
        int lf=v[x][y] + check(x,y-1 ,v,dp); 
        if(lf>=0) return dp[x][y]=min(0,up);
        if(up>=0) return dp[x][y]=min(0,lf);

        return dp[x][y]=min(0 ,  max(up,lf) );
    }

    int calculateMinimumHP(vector<vector<int>>& v) {
        int n=v.size();
        int m=v[0].size();
        vector<vector<int>> dp(n,vector<int>(m,1e9));
        // dp[0][0]=v[0][0];
        int t= check(m-1,n-1, v,dp);
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                cout<<dp[i][j]<<" ";
            } cout<<endl;
        }
        return 1 + -1*t;
    }
};



************************************optimal soln************************************************

// class Solution {
// public:

//     int calculateMinimumHP(vector<vector<int>>& v) {
//         int n=v.size();
//         int m=v[0].size();
//         vector<vector<int>> dp(n,vector<int>(m,1e9));
//         for(int i=n-1;i>=0;i--){
//             for(int j=m-1;j>=0;j--){
//                 if(i==n-1 && j==m-1) dp[i][j]=min(0,v[i][j]);
//                 else if(i==n-1) dp[i][j]=min(0,dp[i][j+1]+ v[i][j]);
//                 else if(j==m-1) dp[i][j]=min(0,dp[i+1][j]+ v[i][j]);
//                 else{
//                     dp[i][j]=min(0,v[i][j] + max(dp[i][j+1] , dp[i+1][j]));
//                 }
//             }
//         }
//         return 1+abs(dp[0][0]);
//     }
// };
