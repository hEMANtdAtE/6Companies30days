class Solution {
public:
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        double a=sqrt(pow((p1[0]-p2[0]),2) + pow((p1[1]-p2[1]),2) );
        double b= sqrt(pow((p1[0]-p3[0]),2) + pow((p1[1]-p3[1]),2) );
        double c= sqrt(pow((p2[0]-p3[0]),2) + pow((p2[1]-p3[1]),2) );
        double d=max(a,b);
        d=max(d,c);
        double s=min(a,b);
        cout<<s<<" "<<d<<endl;
        if(s==0 && d==0) return false;
        // cout<<sqrt(2)<<" "<<1.41421*s<<endl;
        if( sqrt(pow((p1[0]-p2[0]),2) + pow((p1[1]-p2[1]),2) ) == sqrt(pow((p3[0]-p4[0]),2) + pow((p3[1]-p4[1]),2) ) ){
            if( sqrt(pow((p1[0]-p3[0]),2) + pow((p1[1]-p3[1]),2) ) == sqrt(pow((p4[0]-p2[0]),2) + pow((p4[1]-p2[1]),2) ) ){
                // cout<<sqrt(2)*s;
                double dd=sqrt(2)*s;
                cout<<dd<<" "<<d;
                if (abs(d - dd) < 1e-9) {
                    return true;
                }
            }
        }
        return false;
    }
};
