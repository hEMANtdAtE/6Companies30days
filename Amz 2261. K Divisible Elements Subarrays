***************************************************my soln**********************************
class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {
        array<int, 201> cnt = {}, hash = {};
        int res = 0;
        unordered_set<int> s;
        for (size_t sz = 0; sz != nums.size(); ++sz) {
            s.clear();
            for (int i = 0; i + sz < nums.size(); ++i) {
                cnt[i] += nums[i + sz] % p == 0;
                if (cnt[i] <= k) {
                    hash[i] = (1LL * hash[i] * 200 + nums[i + sz]) % 1000000007;
                    res += s.insert(hash[i]).second;
                }
            }
        }
        return res;
    }
};

class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {
        int ans = 0, n = nums.size();
        set<string> s;
        for (int i = 0; i < n; i++) {
            int cnt = 0;
            string t;
            for (int j = i; j < n; j++) {
                cnt += nums[j] % p == 0 ? 1 : 0;
                if (cnt <= k) {
                    t = t + to_string(nums[j]) + "|";
                    s.insert(t);
                } else {
                    break;
                }
            }
        }
        return (int) s.size();
    }
};
